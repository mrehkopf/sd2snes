.link page $c0
#include "memmap.i65"

; APU RAM init routine
apu_ram_init:
  php
  sep #$20 : .as
  rep #$10 : .xl
  ldy #$0002
  jsr spc_begin_upload
  ldx #$0000
-
  lda @apu_ram_init_code, x
  jsr spc_upload_byte
  inx
  cpx #35
  bne -
  ldx #$0002
  stx APUIO2
  stz APUIO1
  lda APUIO0
  inc
  inc
  sta APUIO0
- cmp APUIO0
  bne -
  plp
  rts

; All SPC700 routines in SPC700 machine code below this line

apu_ram_init_code:  ; .org $0002
  ; part1: fill $0100-$03ff with #$aa
  .byt $e8,$aa      ; mov a, #$aa
  .byt $8d,$00      ; mov y, #$00
  .byt $cd,$03      ; mov x, #$03
  ; loop:
  .byt $d6,$00,$01  ; mov !$0100+y, a
  .byt $fc          ; inc y
  .byt $d0,-6       ; bne loop
  .byt $ab,$0a      ; inc loop+2
  .byt $1d          ; dec x
  .byt $d0,-11      ; bne loop
  ; part2: zero $0400-$ffff
  .byt $e8,$00      ; mov a, #$00
  .byt $cd,$fc      ; mov x, #$fc
  ; loop2:
  .byt $d6,$00,$04  ; mov !$0400+y, a
  .byt $fc          ; inc y
  .byt $d0,-6       ; bne loop2
  .byt $ab,$19      ; inc loop2+2
  .byt $1d          ; dec x
  .byt $d0,-11      ; bne loop2
  ; Re-run IPL
  .byt $5f,$c0,$ff  ; jmp $ffc0

; SPC player code
; SPC loader & transfer routines by Shay Green <gblargg@gmail.com>

spc_loader:         ; .org $0002
  .byt $f8,$21      ;  mov x,@loader_data
  .byt $bd          ;  mov sp,x
  .byt $cd,$22      ;  mov x,#@loader_data+1

; Push PC and PSW from SPC header
  .byt $bf          ;  mov a,(x)+
  .byt $2d          ;  push a
  .byt $bf          ;  mov a,(x)+
  .byt $2d          ;  push a
  .byt $bf          ;  mov a,(x)+
  .byt $2d          ;  push a

; Set FLG to $60 rather than value from SPC
  .byt $e8,$60      ;  mov a,#$60
  .byt $d4,$6c      ;  mov FLG+x,a

; Restore DSP registers
  .byt $8d,$00      ;  mov y,#0
  .byt $bf          ; next:  mov a,(x)+
  .byt $cb,$f2      ;  mov $f2,y
  .byt $c4,$f3      ;  mov $f3,a
  .byt $fc          ;  inc y
  .byt $10,-8       ;  bpl next

  .byt $8f,$6c,$f2  ;  mov $f2,#FLG  ; set for later

; Rerun loader
  .byt $5f,$c0,$ff  ;  jmp $ffc0

;---------------------------------------

spc_transfer:       ; .org $0002

  .byt $cd,$fe      ; mov x,#$fe    ; transfer 254 pages

; Transfer four-byte chunks
  .byt $8d,$3f      ; page: mov y,#$3f
  .byt $e4,$f4      ; quad: mov a,$f4
  .byt $d6,$00,$02  ; mov0: mov !$0200+y,a
  .byt $e4,$f5      ;  mov a,$f5
  .byt $d6,$40,$02  ; mov1: mov !$0240+y,a
  .byt $e4,$f6      ;  mov a,$f6
  .byt $d6,$80,$02  ; mov2: mov !$0280+y,a
  .byt $e4,$f7      ;  mov a,$f7  ; tell S-CPU we're ready for more
  .byt $cb,$f7      ;  mov $f7,Y
  .byt $d6,$c0,$02  ; mov3: mov !$02c0+y,a
  .byt $00          ;  nop ; give some time for S-CPU HDMA / WRAM refresh
  .byt $dc          ;  dec y
  .byt $10,-26      ;  bpl quad
; Increment MSBs of addresses
  .byt $ab,$0a      ;  inc mov0+2
  .byt $ab,$0f      ;  inc mov1+2
  .byt $ab,$14      ;  inc mov2+2
  .byt $ab,$1b      ;  inc mov3+2
  .byt $1d          ;  dec x
  .byt $d0,-39      ;  bne page
; Rerun loader
  .byt $5f,$c0,$ff  ;  jmp $ffc0
