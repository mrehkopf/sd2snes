.link page $c0
#include "memmap.i65"
#include "stack.i65"

waitblank:
  php
  sep #$30 : .as : .xs
- lda @$004212
  bmi -
- lda @$004212
  bpl -
  plp
  rts

; strlen
; characters 0 and 1 are considered "end of string"
; arguments: DB=data bank, Y=offset (16-bit index!)
; return: Y=strlen
strlen:
  php
  rep #$10 : .xl
  sep #$20 : .as
  phx
  ldx #$0000
- lda !$0, y
  lsr
  beq +
  iny
  inx
  bra -
+ txy
  plx
  plp
  rts

; bin2dec16
; arguments: A=value (16 bits)
; return: 6 bytes of ASCII decoded decimal (5 digits+NUL) in string buffer
bin2dec16:
  phd
  phb
    pea $0000
    pld
    php
    rep #$20 : .al
    sep #$10 : .xs
    pha
      ldx #$80
      phx
      plb
      lda #$2020
      sta stringbuf
      sta stringbuf+2
      lda #$0020
      sta stringbuf+4
      ldx #$04
    pla
-   sta $4204
    lda #$000a
    sta $4206    ; now burn 16 cycles
    pha : pla    ; 9
    xba          ; 3
    lda @$004216 ; 4 - load remainder
    ora #$30
    tay
    sty stringbuf, x
    dex
    lda $4214 ; load quotient
    beq +
    bra -
+   plp
  plb
  pld
  rts
